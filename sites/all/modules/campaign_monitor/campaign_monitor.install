<?php
// $Id: campaign_monitor.install,v 1.1.2.4 2009/09/11 19:53:04 davyvandenbremt Exp $

/**
 * @file
 * Installation
 *
 * @author Davy Van Den Bremt
 */

/**
 * Implementation of hook_install().
 */
function campaign_monitor_install() {
  drupal_install_schema('campaign_monitor');

  $link = array('!link' => l(t('Administer > Site configuration > Campaign Monitor'), 'admin/settings/campaign_monitor'));
  drupal_set_message(t("Campaign Monitor module settings are available under !link", $link));
}

/**
 * Implementation of hook_uninstall().
 */
function campaign_monitor_uninstall() {
  drupal_uninstall_schema('campaign_monitor');

  db_query("DELETE FROM {variable} WHERE name LIKE 'campaign_monitor_%'");
  cache_clear_all('variables', 'cache');
}

/**
 * Implementation of hook_schema().
 */
function campaign_monitor_schema() {

  // lists
  $schema['campaign_monitor_list'] = array(
    'fields' => array(
      'lid'                => array('type' => 'varchar', 'length' => '64', 'not null' => TRUE),
      'name_api'           => array('type' => 'varchar', 'length' => '255', 'not null' => TRUE, 'default' => ''),
      'status_api'         => array('type' => 'int', 'not null' => TRUE, 'default' => 0),
      'status'             => array('type' => 'int', 'not null' => TRUE, 'default' => 0),
      'name'               => array('type' => 'varchar', 'length' => '255', 'not null' => TRUE, 'default' => ''),
      'name_action'        => array('type' => 'varchar', 'length' => '255', 'not null' => TRUE, 'default' => ''),
      'name_action_long'   => array('type' => 'varchar', 'length' => '255', 'not null' => TRUE, 'default' => ''),
      'description'        => array('type' => 'text', 'not null' => TRUE, 'default' => ''),
      'field_mapping'      => array('type' => 'text', 'not null' => TRUE, 'default' => ''),
    ),
    'primary key' => array('lid'),
  );

  // requests
  $schema['campaign_monitor_request'] = array(
    'fields' => array(
      'mail'      => array('type' => 'varchar', 'length' => '128', 'not null' => TRUE),
      'lid'       => array('type' => 'varchar', 'length' => '64', 'not null' => TRUE),
      'type'      => array('type' => 'varchar', 'length' => '32', 'not null' => TRUE),
      'fields'    => array('type' => 'text', 'not null' => TRUE, 'default' => ''),
      'timestamp' => array('type' => 'int', 'not null' => TRUE),
    ),
    'primary key' => array('mail', 'lid'),
    'indexes' => array(
      'timestamp' => array('timestamp'),
      'type' => array('type'),
    ),
  );

  // subscriptions
  $schema['campaign_monitor_subscription'] = array(
    'fields' => array(
      'mail'   => array('type' => 'varchar', 'length' => '128', 'not null' => TRUE),
      'lid'    => array('type' => 'varchar', 'length' => '64', 'not null' => TRUE),
    ),
    'primary key' => array('mail', 'lid'),
  );

  return $schema;
}

/**
 * Implementation of hook_requirements().
 */
function campaign_monitor_requirements($phase) {
  $requirements = array();

  $t = get_t();

  if ($phase == 'runtime') {

    // Raise warning if Campaign Monitor API key has not been set yet.
    if (trim(variable_get('campaign_monitor_api_key', '')) == '') {
      $requirements['campaign_monitor_api_key'] = array(
        'title' => $t('Campaign Monitor API key'),
        'description' => $t('Your Campaign Monitor API key has not been set yet. Please specify it on the <a href="@url">Campaign Monitor settings page</a>.', array('@url' => url('admin/settings/campaign_monitor'))),
        'severity' => REQUIREMENT_ERROR,
        'value' => $t('Not configured'),
      );
    }

    // Raise warning if Campaign Monitor Client ID has not been set yet.
    if (trim(variable_get('campaign_monitor_client_id', '')) == '') {
      $requirements['campaign_monitor_client_id'] = array(
        'title' => $t('Campaign Monitor Client ID'),
        'description' => $t('Your Campaign Monitor Client ID has not been set yet. Please specifiy it on the <a href="@url">Campaign Monitor settings page</a>.', array('@url' => url('admin/settings/campaign_monitor'))),
        'severity' => REQUIREMENT_ERROR,
        'value' => $t('Not configured'),
      );
    }
  }

  return $requirements;
}